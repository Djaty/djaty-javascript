{"version":3,"sources":["djaty-javascript.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_typeof2","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_extendableBuiltin","cls","ExtendableBuiltin","Reflect","construct","Array","from","arguments","getPrototypeOf","this","_toConsumableArray","arr","isArray","i","arr2","length","Symbol","iterator","obj","Djaty","window","config","apiUrl","bugsURL","cdnPath","api","allowAutoSubmission","apiBugsUrl","debug","mode","timelineLimit","stackTraceLimit","reportDjatyCrashes","DjatyError","_extendableBuiltin2","message","Error","BACKEND_LIMIT","PATCH_ITEM_NO","SECRET_ITEM_FIELDS","userStructure","types","required","properties","userId","constrains","maxLength","minLength","logon","additionalProperties","onBugSubmitStructure","constants","elementsForAllRequests","elementsPerRequest","bufferRequestLimit","filesURL","delayTimePerRequest","serverDelayTime","backendLimit","secretItemData","requestSizeLimit","privacyPlaceHolder","objectSizeLimit","titleLimit","timelineLimitMax","stacktraceLimitMax","itemType","ajax","form","navigation","exception","file","console","defaultMode","removeSecretData","removeEmail","localStorage","sessionStorage","cookies","queryParams","headers","requestTime","response","requestPayload","excludedMethods","repetitionCount","title","state","fullMode","configStructure","reportURL","projectId","namespace","apiKey","tags","items","ignoredCharacters","maxItems","uniqueItems","stage","allowedValues","release","trackingOptions","user","onBeforeBugSubmission","ignoreTimelineItem","ignoredErrors","hashType","trimmingItemType","defaultStages","PROD","STAG","DEV","TEST","_typeof","utils","originalAddEventListener","setOriginalAddEventListener","orgFunction","originalRemoveEventListener","setOriginalRemoveEventListener","forOwn","cb","has","hasOwnProperty","x","isDomElement","o","HTMLElement","nodeType","nodeName","getTryCatchHandler","methodName","context","wrappingOp","_len","args","_key","forEach","item","index","_len2","cbArgs","_key2","apply","err","logger","error","_utils$originalAddEve","concat","mergeRecursive","obj1","obj2","p","nestedObj","assign","clone","undefined","temp","Date","key","isActiveClone","checkerType","string","checker","target","_maxLength","_minLength","chars","some","char","indexOf","isNaN","_isNaN","_x","toString","array","_maxItems","minItems","_minItems","isUnique","idx","number","boolean","object","function","isSelectorOrEl","elements","document","querySelectorAll","validate","label","struct","objKeys","keys","structKeysKeys","allowedType","type","propName","propStruct","child","correctType","constrainKey","constrainFunction","join","addEventListenerAndSaveIt","addedListeners","listener","djatyAddEventListener","node","wrappedFn","nodeListeners","push","eventName","nodeListToArr","arrAlike","NodeList","slice","_len3","_key3","output","source","externalMethodHandler","ns","listeners","exposedMethods","callMethod","targetMethodName","targetMethodNameArr","split","_len4","_key4","evDetails","sourceNS","targetNS","method","now","Math","floor","random","data","postMessage","handleMethodResp","_ref","_Djaty$utils$external","handleMethodCall","_Djaty$utils$external2","targetArgs","_len5","_key5","addExposedMethods","addedMethods","listenCallResp","_ref2","init","destroy","logTimeline","consoleWrappedMethods","isInitialized","_autoReportCb","_this","shift","attrName","version","unshift","registerAutoReportCb","removeAutoReportCb","initApp","handleInitFromApiKeyAttr","landingURL","location","href","timeline","onTrackingCoreCb","trackers","isInitiated","originalMethods","onSubmitHandlers","extConfig","initialFormData","globalCustomData","afterDjatyJSLoadCb","_ref$isAlreadyLoaded","isAlreadyLoaded","_ref$isControlledByDj","isControlledByDjatyExt","readyState","tmpIFrame","createElement","src","body","appendChild","contentDocument","addEventListener","removeEventListener","contentWindow","removeChild","Node","isExtension","_loadCoreLib","jsFrontendConfig","warn","mergedConfig","tmpConfig","validationErr","level","_handleConfigLimits","_addBeforeBugSubmissionCb","option","skippedTrueValues","url","ev","time","tracker","onTrackingCb","log","listen","afterLoadDjatyCb","addInFrontOfSubmitHandler","event","addTracker","regCoreTrackingCb","coreTrackingCb","regExtConfig","regAfterLoadDjaty","loadAfterCoreLoad","onLoadError","msg","info","errMsg","xhttp","XMLHttpRequest","onerror","onreadystatechange","status","isLoaded","querySelector","codeScript","innerHTML","responseText","setAttribute","classList","add","head","trackingApp","open","send","name","_attachInitNodeListenersToOurEvents","addEventListenerArgs","arg","djatyApiKey","getAttribute","ourLimits","limit","maxLimit","pcApp","trackBug","trackConsole","destroyMessage","setUser","addGlobalCustomData","navigationTracker","trackPushStateNavigation","history","pushState","trackReplaceStateNavigation","replaceState","_wrapMethod","_handleNavigation","originalFn","origReturn","ajaxTracker","requestDetails","trackOpenAjax","trackSendAjax","setHeadWrap","setRequestHeader","abortWrapper","abort","_wrapReqOpen","_wrapSetReqHeader","_wrapReqSend","_wrapAbort","requestStart","getTime","host","rand","requestId","match","__djaty","openParams","reqStart","reqId","requestHeaders","originalReturn","_isDjatyAjax","isHeaderAlreadyExists","find","JSON","stringify","ajaxCookie","cookie","_this2","reqArgs","isAborted","_ajaxHandler","resHeaders","getAllResponseHeaders","reqEnd","responseHeaders","Event","escapedApiURL","replace","escapedCDNURL","ignoredURLRegex","RegExp","consoleTracker","_this3","_len6","_key6","_consoleHandler","splice","exceptionTracker","_errHandler","fileTracker","addNodeListener","nodeEl","eventCb","_fileHandler","nodeElCheck","parentNodeEl","nestedChildrenEls","fileTypesNames","tagName","toLowerCase","fileTypes","hasAttribute","img","input","link","script","audio","video","track","observerConfig","childList","subtree","allDOMElement","trackFiles","MutationObserver","mutations","mutation","addedNodes","observe","disconnect","formTracker","formElCheck","untracked","className","childNodes","_onFormSubmit","formObserverConfig","allFormEls","trackForm","addSubmitHandler"],"mappings":"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","file":"djaty-javascript.js","sourcesContent":["'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _extendableBuiltin(cls) {\n  function ExtendableBuiltin() {\n    var instance = Reflect.construct(cls, Array.from(arguments));\n    Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n    return instance;\n  }\n\n  ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n    constructor: {\n      value: cls,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(ExtendableBuiltin, cls);\n  } else {\n    ExtendableBuiltin.__proto__ = cls;\n  }\n\n  return ExtendableBuiltin;\n}\n\n/**\n * Configuration file\n *\n */\nvar Djaty = window.Djaty;\nwindow.Djaty = Djaty = Djaty || {};\nDjaty.config = Djaty.config || {\n  apiUrl: 'https://djaty.com',\n  bugsURL: 'https://bugs.djaty.com',\n  cdnPath: 'https://cdn.djaty.com',\n  api: '/api',\n  allowAutoSubmission: true,\n  apiBugsUrl: '/bugs',\n  debug: false,\n  mode: 'default',\n  timelineLimit: 30,\n  stackTraceLimit: 40,\n\n  reportDjatyCrashes: true\n};\n\n// eslint-disable-next-line\nDjaty.DjatyError = function (_extendableBuiltin2) {\n  _inherits(DjatyError, _extendableBuiltin2);\n\n  function DjatyError(message) {\n    _classCallCheck(this, DjatyError);\n\n    return _possibleConstructorReturn(this, (DjatyError.__proto__ || Object.getPrototypeOf(DjatyError)).call(this, '[Djaty] ' + message));\n  }\n\n  return DjatyError;\n}(_extendableBuiltin(Error));\n//# sourceMappingURL=config.js.map\n\n'use strict';\n\n/**\n * Constants file\n *\n * */\nvar BACKEND_LIMIT = 15 * 1000 * 1000;\nvar PATCH_ITEM_NO = 10;\nvar SECRET_ITEM_FIELDS = ['token', 'apikey', 'api_key', 'creditcard', 'credit_card', 'auth', 'password', 'secret'];\nvar userStructure = {\n  types: ['object'],\n  required: false,\n  properties: {\n    userId: {\n      types: ['number', 'string'],\n      required: false,\n      constrains: {\n        maxLength: 255,\n        minLength: 2\n      }\n    },\n    logon: {\n      types: ['string'],\n      required: false,\n      constrains: {\n        maxLength: 255,\n        minLength: 2\n      }\n    }\n  },\n  additionalProperties: false\n};\n\nvar onBugSubmitStructure = {\n  types: ['function'],\n  required: false\n};\n\nDjaty.constants = Djaty.constants || {\n  elementsForAllRequests: 1e2,\n  elementsPerRequest: PATCH_ITEM_NO,\n  bufferRequestLimit: 300,\n  filesURL: '/js-sdk/jsAgentCoreDjaty.js',\n  delayTimePerRequest: 2e3,\n  serverDelayTime: 30 * 60 * 1000,\n  backendLimit: BACKEND_LIMIT,\n  secretItemData: SECRET_ITEM_FIELDS,\n  requestSizeLimit: BACKEND_LIMIT / (2 * Djaty.config.timelineLimit * PATCH_ITEM_NO),\n  privacyPlaceHolder: '**HIDDEN**',\n  objectSizeLimit: 1000 * 100,\n  titleLimit: 250,\n  timelineLimitMax: 100,\n  stacktraceLimitMax: 100,\n  itemType: {\n    ajax: 'ajax',\n    form: 'form',\n    navigation: 'navigation',\n    exception: 'exception',\n    file: 'file',\n    console: 'console'\n  },\n  defaultMode: {\n    removeSecretData: SECRET_ITEM_FIELDS,\n    removeEmail: true,\n    localStorage: false,\n    sessionStorage: false,\n    cookies: false,\n    ajax: {\n      queryParams: false,\n      cookies: false,\n      headers: false,\n      requestTime: false,\n      response: false,\n      requestPayload: false\n    },\n\n    console: {\n      excludedMethods: ['profile', 'count'],\n      repetitionCount: false\n    },\n\n    navigation: {\n      title: true,\n      state: false\n    },\n\n    form: true,\n\n    file: true,\n\n    exception: {\n      repetitionCount: false\n    }\n  },\n  fullMode: {\n    removeSecretData: false,\n    removeEmail: false,\n    localStorage: true,\n    sessionStorage: true,\n    cookies: true,\n    ajax: {\n      queryParams: true,\n      cookies: true,\n      headers: true,\n      requestTime: true,\n      response: true,\n      requestPayload: true\n    },\n\n    console: {\n      repetitionCount: true\n    },\n\n    navigation: {\n      title: true,\n      state: true\n    },\n\n    form: true,\n    file: true,\n    exception: {\n      repetitionCount: true\n    }\n  },\n  userStructure: userStructure,\n  onBugSubmitStructure: onBugSubmitStructure,\n  configStructure: {\n    types: ['object'],\n    required: false,\n    additionalProperties: false,\n    properties: {\n      apiUrl: {\n        types: ['string'],\n        required: false\n      },\n      bugsURL: {\n        types: ['string'],\n        required: false\n      },\n      cdnPath: {\n        types: ['string'],\n        required: false\n      },\n      api: {\n        types: ['string'],\n        required: false\n      },\n      apiBugsUrl: {\n        types: ['string'],\n        required: false\n      },\n      reportURL: {\n        types: ['string'],\n        required: false\n      },\n      stackTraceLimit: {\n        types: ['number'],\n        required: false\n      },\n      timelineLimit: {\n        types: ['number'],\n        required: false\n      },\n      projectId: {\n        types: ['string'],\n        required: false,\n        constrains: {\n          maxLength: 255\n        }\n      },\n      namespace: {\n        types: ['string'],\n        required: false,\n        constrains: {\n          maxLength: 50,\n          minLength: 4\n        }\n      },\n      apiKey: {\n        types: ['string'],\n        required: false,\n        constrains: {\n          maxLength: 255,\n          minLength: 6\n        }\n      },\n      debug: {\n        types: ['boolean'],\n        required: false\n      },\n      reportDjatyCrashes: {\n        types: ['boolean'],\n        required: false\n      },\n      tags: {\n        types: ['array', 'string'],\n        required: false,\n        items: {\n          types: ['string'],\n          constrains: {\n            maxLength: 255,\n            minLength: 2,\n            ignoredCharacters: [' ', ',', '/']\n          }\n        },\n        constrains: {\n          maxItems: 10,\n          uniqueItems: true\n        }\n      },\n      stage: {\n        types: ['string'],\n        required: false,\n        constrains: {\n          maxLength: 255,\n          minLength: 1\n        }\n      },\n      allowAutoSubmission: {\n        types: ['boolean'],\n        required: false\n      },\n      mode: {\n        types: ['string'],\n        required: false,\n        allowedValues: ['default', 'full']\n      },\n      release: {\n        types: ['string'],\n        required: false,\n        constrains: {\n          maxLength: 100,\n          minLength: 1\n        }\n      },\n      trackingOptions: {\n        types: ['object'],\n        required: false,\n        additionalProperties: false,\n        properties: {\n          removeSecretData: {\n            types: ['boolean', 'array'],\n            items: {\n              types: ['string']\n            },\n            required: false\n          },\n          removeEmail: {\n            types: ['boolean'],\n            required: false\n          },\n          localStorage: {\n            types: ['boolean'],\n            required: false\n          },\n          sessionStorage: {\n            types: ['boolean'],\n            required: false\n          },\n          cookies: {\n            types: ['boolean'],\n            required: false\n          },\n          ajax: {\n            types: ['boolean', 'object'],\n            required: false,\n            additionalProperties: false,\n            properties: {\n              queryParams: {\n                types: ['boolean'],\n                required: false\n              },\n              requestPayload: {\n                types: ['boolean'],\n                required: false\n              },\n              headers: {\n                types: ['boolean'],\n                required: false\n              },\n              cookies: {\n                types: ['boolean'],\n                required: false\n              },\n              response: {\n                types: ['boolean'],\n                required: false\n              },\n              requestTime: {\n                types: ['boolean'],\n                required: false\n              }\n            }\n          },\n          console: {\n            types: ['boolean', 'object'],\n            required: false,\n            additionalProperties: false,\n            properties: {\n              repetitionCount: {\n                types: ['boolean'],\n                required: false\n              },\n              excludedMethods: {\n                types: ['array'],\n                required: false,\n                items: {\n                  types: ['string']\n                }\n              }\n            }\n          },\n          navigation: {\n            types: ['boolean', 'object'],\n            required: false,\n            additionalProperties: false,\n            properties: {\n              title: {\n                types: ['boolean'],\n                required: false\n              },\n              state: {\n                types: ['boolean'],\n                required: false\n              }\n            }\n          },\n          form: {\n            types: ['boolean'],\n            required: false\n          },\n          exception: {\n            types: ['boolean', 'object'],\n            additionalProperties: false,\n            required: false,\n            properties: {\n              repetitionCount: {\n                types: ['boolean'],\n                required: false\n              }\n            }\n          },\n          file: {\n            types: ['boolean'],\n            required: false\n          }\n        }\n      },\n      user: userStructure,\n      onBeforeBugSubmission: onBugSubmitStructure,\n      ignoreTimelineItem: {\n        types: ['function'],\n        required: false\n      },\n      ignoredErrors: {\n        types: ['array'],\n        items: {\n          types: ['string']\n        },\n        required: false\n      }\n    }\n  },\n  hashType: 'sha256',\n  trimmingItemType: 'trimming',\n  defaultStages: {\n    PROD: 'Prod',\n    STAG: 'Stag',\n    DEV: 'Dev',\n    TEST: 'Test'\n  }\n};\n//# sourceMappingURL=constants.js.map\n\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/* ########################################################################## */\n/* ######################## COMMONLY USED FUNCTIONS ######################### */\n/* ########################################################################## */\n\n/* global HTMLElement, NodeList */\n\nvar utils = Djaty.utils = Djaty.utils || {\n  originalAddEventListener: null,\n  setOriginalAddEventListener: function setOriginalAddEventListener(orgFunction) {\n    if (this.originalAddEventListener) {\n      return;\n    }\n\n    this.originalAddEventListener = orgFunction;\n  },\n\n  originalRemoveEventListener: null,\n  setOriginalRemoveEventListener: function setOriginalRemoveEventListener(orgFunction) {\n    if (this.originalRemoveEventListener) {\n      return;\n    }\n\n    this.originalRemoveEventListener = orgFunction;\n  },\n\n  /**\n   * Iterate over objects\n   *\n   * @param  {Object}   obj : target object\n   * @param  {Function} cb  : callback\n   * @return {void}\n   */\n  forOwn: function forOwn(obj, cb) {\n    // Error Handling\n    if (!(obj instanceof Object)) {\n      throw new Error('Make sure you pass \"forOwn\" obj parameter as an object');\n    }\n\n    if (typeof cb !== 'function') {\n      throw new Error('Make sure you pass \"forOwn\" cb parameter as a function');\n    }\n\n    var has = Object.prototype.hasOwnProperty;\n    // for..in.. will iterate object attr even it was inherited from parents\n    // eslint-disable-next-line no-restricted-syntax\n    for (var x in obj) {\n      // check if obj has that attr originally not from its parents\n      if (!has.call(obj, x)) {\n        continue;\n      }\n\n      cb(x, obj[x]);\n    }\n  },\n\n\n  /**\n   * Returns true if it is a DOM element\n   *\n   * @param  {Object} o\n   * @return {Boolean}\n   */\n  isDomElement: function isDomElement(o) {\n    return (typeof HTMLElement === 'undefined' ? 'undefined' : _typeof(HTMLElement)) === 'object' ? o instanceof HTMLElement : o && (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && o !== null && o.nodeType === 1 && typeof o.nodeName === 'string';\n  },\n\n\n  /**\n   * Add try/catch functionality for callback of Djaty async methods like\n   * (AddEventListeners, ajax, setTimeout, ..)\n   *\n   * @param {String} methodName\n   * @param {Object} context\n   * @param {Function} wrappingOp\n   */\n  getTryCatchHandler: function getTryCatchHandler(methodName, context, wrappingOp) {\n    if (!utils.originalAddEventListener) {\n      throw new Djaty.DjatyError('Can\\'t Set CB handler without originalAddEventListener');\n    }\n\n    return function getTryCatchHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      args.forEach(function (item, index) {\n        if (typeof item !== 'function') {\n          return;\n        }\n        args[index] = function asyncCb() {\n          try {\n            for (var _len2 = arguments.length, cbArgs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              cbArgs[_key2] = arguments[_key2];\n            }\n\n            item.apply(this, cbArgs);\n          } catch (err) {\n            if (err instanceof Djaty.DjatyError) {\n              throw err;\n            }\n\n            Djaty.logger.error('Catch async methods (listeners, .. ) error message for method \\'' + methodName + '\\'' + ('is the async callback still exists: \\'' + !!item + '\\''), err);\n          }\n        };\n        if (wrappingOp) {\n          wrappingOp(args[index]);\n        }\n      });\n\n      // Use original addEventListener on our events\n      if (methodName === 'addEventListener') {\n        var _utils$originalAddEve;\n\n        return (_utils$originalAddEve = utils.originalAddEventListener).call.apply(_utils$originalAddEve, [context].concat(args));\n      }\n\n      return context[methodName].apply(context, args);\n    };\n  },\n\n  /**\n   * Merge two objects recursively\n   *\n   * @param {Object} obj1\n   * @param {Object} obj2\n   * @return {Object}\n   */\n  mergeRecursive: function mergeRecursive(obj1, obj2) {\n    // eslint-disable-next-line\n    for (var p in obj2) {\n      // Property in destination object set; update its value.\n      if (obj2[p] && obj2[p].constructor === Object) {\n        var nestedObj = obj1[p] ? this.mergeRecursive(obj1[p], obj2[p]) : obj2[p];\n        obj1[p] = utils.assign({}, obj1[p], nestedObj);\n      } else {\n        obj1[p] = obj2[p];\n      }\n    }\n\n    return obj1;\n  },\n\n  /**\n   * Clone an object and return new reference\n   * @param obj\n   * @return {*}\n   */\n  clone: function clone(obj) {\n    if (obj === null || obj === undefined) {\n      return {};\n    }\n\n    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || 'isActiveClone' in obj) {\n      return obj;\n    }\n\n    var temp = null;\n    if (obj instanceof Date) {\n      temp = new obj.constructor(); // or new Date(obj);\n    } else {\n      temp = obj.constructor();\n    }\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        obj.isActiveClone = null;\n        temp[key] = utils.clone(obj[key]);\n        delete obj.isActiveClone;\n      }\n    }\n\n    return temp;\n  },\n\n  /* eslint-disable no-tabs */\n  /**\n   * @Duplicated\n   *\n   * Validate class options against an option structure object.\n   *\n   * Example for the option structure object:\n   *   const optStruct = {\n   *     option: {\n   *       // Types for target\n   *       types: ['number', 'string'],\n   *\n   *       // Expected values\n   *       allowedValues: ['foo', 'bar'],\n   *\n   *\t\t\t// Type of child type like array not support nested object inside array\n     *   \t\titems: 'selectorOrEl' (Valid only with option \"type: array\")\n   *\n   *       // Required property\n   *       required: false,\n   *\n   *       // Prevent adding additional properties default true\n   *       additionalProperties: true,\n   *\n   *       // Has type constrains: Each type may have constrains.\n   *       constrains: {\n   *        maxLength: 10,\n   *        ...\n   *        }\n   *     },\n   *   };\n   *\n   * @param  {String} label : Class name\n   * @param  {Object} optStruct : key/value opt structure\n   * @param  {Object} target\n   * @return {void}\n   */\n  /* eslint-disable no-tabs */\n  checkerType: {\n    string: {\n      checker: function checker(target) {\n        return typeof target === 'string';\n      },\n      constrains: {\n        maxLength: function maxLength(target, _maxLength) {\n          return target.length <= _maxLength;\n        },\n        minLength: function minLength(target, _minLength) {\n          return target.length >= _minLength;\n        },\n        ignoredCharacters: function ignoredCharacters(target, chars) {\n          return !chars.some(function (char) {\n            return target.indexOf(char) !== -1;\n          });\n        },\n        isNaN: function (_isNaN) {\n          function isNaN(_x) {\n            return _isNaN.apply(this, arguments);\n          }\n\n          isNaN.toString = function () {\n            return _isNaN.toString();\n          };\n\n          return isNaN;\n        }(function (target) {\n          return !!(target && isNaN(target));\n        })\n      }\n    },\n    array: {\n      checker: function checker(target) {\n        return Array.isArray(target);\n      },\n      constrains: {\n        maxItems: function maxItems(target, _maxItems) {\n          return target.length <= _maxItems;\n        },\n        minItems: function minItems(target, _minItems) {\n          return target.length >= _minItems;\n        },\n        uniqueItems: function uniqueItems(target, isUnique) {\n          return !(isUnique && target.some(function (value, idx, self) {\n            return !(self.indexOf(value) === idx);\n          }));\n        }\n      }\n    },\n    number: {\n      checker: function checker(target) {\n        return typeof target === 'number';\n      }\n    },\n    boolean: {\n      checker: function checker(target) {\n        return typeof target === 'boolean';\n      }\n    },\n    object: {\n      checker: function checker(target) {\n        return target.toString() === '[object Object]';\n      }\n    },\n    function: {\n      checker: function checker(target) {\n        return typeof target === 'function';\n      }\n    },\n    isSelectorOrEl: {\n      checker: function checker(target) {\n        var elements = void 0;\n        if (typeof target === 'string') {\n          elements = document.querySelectorAll(target);\n        }\n\n        return Djaty.utils.isDomElement(target) || elements && elements.length;\n      }\n    }\n  },\n\n  validate: function validate(label, struct, target) {\n    var allowedValues = struct.allowedValues;\n\n    if (struct.required && target === undefined) {\n      throw new Djaty.DjatyError('property ' + label + ' is required');\n    }\n\n    if (target === undefined) {\n      return;\n    }\n\n    if (struct.additionalProperties === false && struct.properties) {\n      var objKeys = Object.keys(target);\n      var structKeysKeys = Object.keys(struct.properties);\n\n      if (objKeys.length > structKeysKeys.length || objKeys.some(function (key) {\n        return struct.properties[key] === undefined;\n      })) {\n        throw new Djaty.DjatyError(label + ' should not have additional properties.');\n      }\n    }\n\n    var allowedType = struct.types.some(function (type) {\n      if (type === 'object' && struct.properties && target.toString() === '[object Object]') {\n        utils.forOwn(struct.properties, function (propName, propStruct) {\n          utils.validate(propName, propStruct, target[propName]);\n        });\n      } else if (type === 'array' && struct.items && Array.isArray(target)) {\n        target.forEach(function (child) {\n          utils.validate(label, struct.items, child);\n        });\n      }\n\n      var correctType = utils.checkerType[type].checker(target);\n\n      if (!utils.checkerType[type].constrains || !correctType) {\n        return correctType;\n      }\n\n      utils.forOwn(utils.checkerType[type].constrains, function (constrainKey, constrainFunction) {\n        // Return if no constrain in object structure or object structure has current constrain\n        // and pass it.\n        if (!struct.constrains || struct.constrains[constrainKey] === undefined || constrainFunction(target, struct.constrains[constrainKey])) {\n          return;\n        }\n\n        throw new Djaty.DjatyError('property \\'' + label + '\\' value \\'' + target + '\\' for type: \\'' + type + '\\' should pass constrain \\'' + constrainKey + '\\'');\n      });\n\n      return correctType;\n    });\n\n    if (!allowedType) {\n      throw new Djaty.DjatyError('property \\'' + label + '\\' should be one of those types: \\'' + struct.types + '\\'');\n    }\n\n    if (allowedValues && allowedValues.indexOf(target) < 0) {\n      // check if the value is allowed\n      throw new Djaty.DjatyError('\\'' + label + '\\' expects value options to be one of ' + ('\"' + allowedValues.join(', ') + '\"'));\n    }\n  },\n\n  /**\n   * Add eventListener on a node and save this node, eventName and cb to an array 'NodeListeners'\n   *\n   * @param {Array} addedListeners\n   */\n  addEventListenerAndSaveIt: function addEventListenerAndSaveIt(addedListeners) {\n    addedListeners.forEach(function (listener) {\n      var djatyAddEventListener = utils.getTryCatchHandler('addEventListener', listener.node, function (wrappedFn) {\n        listener.nodeListeners.push({ node: listener.node, eventName: listener.eventName, cb: wrappedFn });\n      });\n\n      djatyAddEventListener(listener.eventName, listener.cb);\n    });\n  },\n\n\n  /**\n   * Convert NodeList to Array\n   *\n   * @param  {NodeList} arrAlike\n   * @return {Array}\n   */\n  nodeListToArr: function nodeListToArr(arrAlike) {\n    // Error Handling\n    if (arrAlike.constructor !== NodeList) {\n      throw new Error('\"nodeListToArr\" expects arrAlike parameter to be NodeList');\n    }\n\n    return Array.prototype.slice.call(arrAlike);\n  },\n\n  /**\n   * Object.assign Polyfill for old browsers.\n   *\n   * @param {Array} args\n   * return Object\n   */\n  assign: function assign() {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    if (typeof Object.assign === 'function') {\n      return Object.assign.apply(Object, args);\n    }\n\n    var target = args[0];\n    // We must check against these specific cases.\n    if (target === undefined || target === null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var output = Object(target);\n    for (var index = 1; index < args.length; index++) {\n      var source = args[index];\n      if (source !== undefined && source !== null) {\n        this.forOwn(source, function (key, value) {\n          output[key] = value;\n        });\n      }\n    }\n    return output;\n  },\n\n\n  externalMethodHandler: {\n    ns: '',\n    listeners: {},\n    exposedMethods: {},\n    nodeListeners: [],\n    /**\n     * Send data to extension method and save cb\n     *\n     * @param {String} targetMethodName\n     * @param {Array} args\n     */\n    callMethod: function callMethod(targetMethodName) {\n      var targetMethodNameArr = targetMethodName.split('.');\n\n      for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        args[_key4 - 1] = arguments[_key4];\n      }\n\n      var cb = args[args.length - 1];\n\n      var evDetails = {\n        sourceNS: Djaty.utils.externalMethodHandler.ns,\n        targetNS: targetMethodNameArr[0],\n        method: targetMethodNameArr[1] + '-' + Date.now() + Math.floor(Math.random() * 1e3),\n        type: 'call',\n        data: args.slice(0, args.length - 1) || []\n      };\n\n      window.postMessage(evDetails, '*');\n\n      if (typeof cb !== 'function') {\n        return;\n      }\n\n      Djaty.utils.externalMethodHandler.listeners[evDetails.method] = cb;\n    },\n\n    /**\n     * When response fire all cb for this event then delete them.\n     *\n     * @param {String} sourceNS\n     * @param {String} method\n     * @param {String} type\n     * @param {Object} data\n     */\n    handleMethodResp: function handleMethodResp(_ref) {\n      var sourceNS = _ref.sourceNS,\n          method = _ref.method,\n          type = _ref.type,\n          data = _ref.data;\n\n      if (!sourceNS || !type || sourceNS !== Djaty.utils.externalMethodHandler.ns || type !== 'resp') {\n        return;\n      }\n\n      if (Djaty.utils.externalMethodHandler.listeners[method]) {\n        var _Djaty$utils$external;\n\n        (_Djaty$utils$external = Djaty.utils.externalMethodHandler.listeners)[method].apply(_Djaty$utils$external, _toConsumableArray(data));\n        delete Djaty.utils.externalMethodHandler.listeners[method];\n      }\n    },\n\n    /**\n     * Call when i want to fire exposed method.\n     *\n     * @param {Object} evDetails\n     */\n    handleMethodCall: function handleMethodCall(evDetails) {\n      var _Djaty$utils$external2;\n\n      var targetArgs = evDetails.data || [];\n\n      targetArgs.push(function () {\n        for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          args[_key5] = arguments[_key5];\n        }\n\n        evDetails.type = 'resp';\n        evDetails.data = args;\n\n        window.postMessage(evDetails, '*');\n      });\n\n      (_Djaty$utils$external2 = Djaty.utils.externalMethodHandler.exposedMethods)[evDetails.method.split('-')[0]].apply(_Djaty$utils$external2, _toConsumableArray(targetArgs));\n    },\n\n    /**\n     * Add exposed methods to run\n     *\n     * @param {Array} addedMethods\n     */\n    addExposedMethods: function addExposedMethods(addedMethods) {\n      Djaty.utils.externalMethodHandler.exposedMethods = Djaty.utils.assign({}, Djaty.utils.externalMethodHandler.exposedMethods, addedMethods);\n    },\n\n    /**\n     * Listen for all call and response event between external component.\n     *\n     * @param {Object} evDetails\n     */\n    listenCallResp: function listenCallResp(_ref2) {\n      var evDetails = _ref2.data;\n\n      if (!evDetails || !evDetails.targetNS || !evDetails.sourceNS || evDetails.sourceNS === Djaty.utils.externalMethodHandler.ns && evDetails.type === 'call' || evDetails.targetNS === Djaty.utils.externalMethodHandler.ns && evDetails.type === 'resp') {\n        return;\n      }\n\n      if (evDetails.sourceNS === Djaty.utils.externalMethodHandler.ns && evDetails.type === 'resp') {\n        Djaty.utils.externalMethodHandler.handleMethodResp(evDetails);\n      }\n\n      if (evDetails.targetNS === Djaty.utils.externalMethodHandler.ns && evDetails.type === 'call') {\n        Djaty.utils.externalMethodHandler.handleMethodCall(evDetails);\n      }\n    },\n\n    /**\n     * Init Djaty.utils.externalMethodHandler and add listen for every event on 'message'.\n     *\n     * @param {String} ns\n     */\n    init: function init(ns) {\n      Djaty.utils.externalMethodHandler.ns = ns;\n\n      Djaty.utils.addEventListenerAndSaveIt([{ nodeListeners: Djaty.utils.externalMethodHandler.nodeListeners,\n        node: window,\n        eventName: 'message',\n        cb: Djaty.utils.externalMethodHandler.listenCallResp }]);\n    },\n\n    /**\n     * Destroy Djaty.utils.externalMethodHandler and add listen for every event on 'message'.\n     *\n     */\n    destroy: function destroy() {\n      this.nodeListeners.forEach(function (listener) {\n        utils.originalRemoveEventListener.call(listener.node, listener.eventName, listener.cb);\n      });\n\n      Djaty.utils.externalMethodHandler.ns = '';\n      Djaty.utils.externalMethodHandler.listeners = {};\n      this.nodeListeners = [];\n    }\n  }\n};\n//# sourceMappingURL=initUtils.js.map\n\n'use strict';\n\n/**\n * Djaty logger\n * - To show djaty logs enable `debug` flag in Djaty.init options.\n *\n * - When Djaty.logger.error is called we trigger auto reporting for current logs\n *   if `reportDjatyCrashes` is enabled.\n *\n * - When use `Djaty.logger.error`, The first param should be a string describe the error and\n *   last param should be the error object itself, In case of no error object,\n *   I will create error with the first param as a it's message\n */\n\n// eslint-disable-next-line no-unused-vars\nDjaty.logger = Djaty.logger || {\n  logTimeline: [],\n  consoleWrappedMethods: ['log', 'dir', 'error', 'warn', 'info'],\n  isInitialized: false,\n  _autoReportCb: null,\n\n  /* ###################################################################### */\n  /* ########################### PUBLIC METHODS ########################### */\n  /* ###################################################################### */\n  init: function init(console) {\n    var _this = this;\n\n    if (this.isInitialized) {\n      return;\n    }\n\n    this.isInitialized = true;\n    this.consoleWrappedMethods.forEach(function (method) {\n      _this[method] = function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (_this.logTimeline.length > 100) {\n          _this.logTimeline.shift();\n        }\n\n        _this.logTimeline.push({ attrName: method, args: args });\n\n        if (_this._autoReportCb && method === 'error') {\n          // To avoid passing the reference of logger items during sending,\n          // Sending exact loggers items for each bug report.\n          _this._autoReportCb(_this.logTimeline.slice(), args);\n        }\n\n        if (!Djaty.config.debug && method !== 'error') {\n          return;\n        }\n\n        if (args[0] && typeof args[0] === 'string') {\n          args[0] = 'Djaty@' + Djaty.version + ': ' + args[0];\n        } else {\n          args.unshift('Djaty@' + Djaty.version);\n        }\n\n        console[method].apply(console, args);\n      };\n    });\n  },\n  registerAutoReportCb: function registerAutoReportCb(cb) {\n    this._autoReportCb = cb;\n  },\n  removeAutoReportCb: function removeAutoReportCb() {\n    this._autoReportCb = null;\n  }\n};\n//# sourceMappingURL=logger.js.map\n\n'use strict';\n\n/* eslint-disable max-lines */\n(function () {\n  // Prevent put initApp twice in case js-agent and extension inject initApp\n  if (window.Djaty.initApp) {\n    window.Djaty.initApp.handleInitFromApiKeyAttr();\n    return;\n  }\n\n  /**\n   * Save untracked items such as files, console, errors,... t the start of page load.\n   * with the aim of keeping this file as minimal as we can.\n   */\n  /* global XMLHttpRequest, Event, MutationObserver, utils, Node */\n  /* ########################################################################## */\n  /* ############################# CORE INITAPP ############################### */\n  /* ########################################################################## */\n  Djaty.initApp = Djaty.initApp || {\n    landingURL: window.location.href,\n    timeline: [],\n    onTrackingCoreCb: null,\n    trackers: {},\n    isInitiated: false,\n    originalMethods: {},\n\n    // array for storing events for submission.\n    onSubmitHandlers: [],\n    nodeListeners: [],\n    extConfig: null,\n    initialFormData: [],\n    ignoredErrors: [],\n    ignoreTimelineItem: null,\n    globalCustomData: [],\n\n    /* **************************** Public Methods **************************** */\n\n    /**\n    * Initialization this object by initialization all trackers.\n    *\n    * @param {Object} config\n    * @param {Boolean} isAlreadyLoaded\n    * @param {Function} afterDjatyJSLoadCb\n    * @param isControlledByDjatyExt\n    * @return void\n    */\n    init: function init(_ref) {\n      var _this = this;\n\n      var config = _ref.config,\n          afterDjatyJSLoadCb = _ref.afterDjatyJSLoadCb,\n          _ref$isAlreadyLoaded = _ref.isAlreadyLoaded,\n          isAlreadyLoaded = _ref$isAlreadyLoaded === undefined ? false : _ref$isAlreadyLoaded,\n          _ref$isControlledByDj = _ref.isControlledByDjatyExt,\n          isControlledByDjatyExt = _ref$isControlledByDj === undefined ? false : _ref$isControlledByDj;\n\n      try {\n        // Take reference for original addEventListener and use it for our events.\n        // in case DOM already loaded take Create iframe and take addEventListener from it.\n        if (document.readyState !== 'loading') {\n          var tmpIFrame = document.createElement('iframe');\n          tmpIFrame.src = window.location.href;\n          document.body.appendChild(tmpIFrame);\n          Djaty.utils.setOriginalAddEventListener(tmpIFrame.contentDocument.addEventListener);\n          Djaty.utils.setOriginalRemoveEventListener(tmpIFrame.contentDocument.removeEventListener);\n          Djaty.logger.init(utils.assign({}, tmpIFrame.contentWindow.console));\n          document.body.removeChild(tmpIFrame);\n        } else {\n          Djaty.utils.setOriginalAddEventListener(Node.prototype.addEventListener);\n          Djaty.utils.setOriginalRemoveEventListener(Node.prototype.removeEventListener);\n          Djaty.logger.init(utils.assign({}, window.console));\n        }\n\n        Djaty.utils.externalMethodHandler.init('djatyInitApp');\n\n        // Notify js-sdk that extension found\n        if (!Djaty.initApp.isExtension && isControlledByDjatyExt) {\n          Djaty.initApp.isExtension = true;\n        }\n\n        // Add listener on DOM LOADED event to load CoreLib and when core\n        // response call afterDjatyJSLoadCb (djatyUILoad)\n        if (!Djaty.initApp.isInitiated) {\n          utils.addEventListenerAndSaveIt([{ nodeListeners: this.nodeListeners,\n            node: document,\n            eventName: 'DOMContentLoaded',\n            cb: function cb() {\n              _this._loadCoreLib(afterDjatyJSLoadCb);\n            }\n          }]);\n        }\n\n        // Extension only send this cb so any another callee considered as js-frontend-agent config\n        var jsFrontendConfig = Djaty.initApp.jsFrontendConfig;\n        if (!isControlledByDjatyExt && !jsFrontendConfig) {\n          // Set default value for automatic submission in case extension change it\n          if (typeof config.allowAutoSubmission === 'undefined') {\n            config.allowAutoSubmission = true;\n          }\n\n          jsFrontendConfig = config;\n        }\n\n        // Handle init djaty-javascript multiple time\n        if (Djaty.initApp.jsFrontendConfig && Djaty.initApp.isInitiated && !isControlledByDjatyExt) {\n          // eslint-disable-next-line no-console\n          console.warn('Init djaty javascript SDK multiple time is ignored, Please unify' + ' init in one way, note: setting djaty-api-key attribute consider initialize');\n          return;\n        }\n\n        var mergedConfig = utils.clone(config);\n        // Select configuration depending on it's priority\n        if (Djaty.initApp.isInitiated) {\n          var tmpConfig = jsFrontendConfig || Djaty.initApp.extConfig || config || Djaty.config;\n\n          mergedConfig = utils.clone(tmpConfig);\n        }\n\n        try {\n          // Validate on Djaty configuration.\n          utils.validate('Configuration', Djaty.constants.configStructure, mergedConfig);\n        } catch (validationErr) {\n          Djaty.utils.externalMethodHandler.callMethod('djatyExt.showNotification', {\n            level: 'warning',\n            message: 'Invalid djaty-js-sdk configuration. So, Djaty default configuration is now applied.'\n          }, function () {});\n\n          throw validationErr;\n        }\n\n        if (jsFrontendConfig) {\n          Djaty.initApp.jsFrontendConfig = jsFrontendConfig;\n        }\n\n        // Validate on config limits and if exceed use our max limits\n        Djaty.initApp._handleConfigLimits(mergedConfig);\n\n        // Fallback to default mode\n        Djaty.config.trackingOptions = mergedConfig.mode === 'full' ? utils.clone(Djaty.constants.fullMode) : utils.clone(Djaty.constants.defaultMode);\n\n        // Handle removeSecretData if an array of boolean then edit it our config then remove it.\n        var removeSecretData = mergedConfig.trackingOptions && mergedConfig.trackingOptions.removeSecretData;\n\n        if (Array.isArray(removeSecretData) || removeSecretData === false) {\n          Djaty.config.trackingOptions.removeSecretData = removeSecretData;\n        } else if (removeSecretData === true) {\n          // Add default secret items when user set `removeSecretData` to `true`\n          Djaty.config.trackingOptions.removeSecretData = Djaty.constants.secretItemData;\n        }\n\n        if (mergedConfig.trackingOptions) {\n          delete mergedConfig.trackingOptions.removeSecretData;\n        }\n\n        if (mergedConfig.onBeforeBugSubmission) {\n          Djaty.initApp._addBeforeBugSubmissionCb(mergedConfig.onBeforeBugSubmission);\n          delete mergedConfig.onBeforeBugSubmission;\n        }\n\n        // Handle ignored errors.\n        if (mergedConfig.ignoredErrors) {\n          Djaty.initApp.ignoredErrors = mergedConfig.ignoredErrors;\n          delete mergedConfig.ignoredErrors;\n        }\n\n        // Handle timeline items callback.\n        if (mergedConfig.ignoreTimelineItem) {\n          Djaty.initApp.ignoreTimelineItem = mergedConfig.ignoreTimelineItem;\n          delete mergedConfig.ignoreTimelineItem;\n        }\n\n        if (mergedConfig.trackingOptions) {\n          // Use default values when user enable the trackers that accept (object and boolean).\n          Djaty.utils.forOwn(mergedConfig.trackingOptions, function (key, option) {\n            var skippedTrueValues = ['ajax', 'exception', 'navigation', 'console'];\n            if (option === true && skippedTrueValues.indexOf(key) !== -1) {\n              delete mergedConfig.trackingOptions[key];\n            }\n          });\n        }\n\n        Djaty.config = utils.mergeRecursive(Djaty.config, mergedConfig);\n\n        if (!isAlreadyLoaded) {\n          // To handle loading core and extUI after loading DOM\n          if (document.readyState !== 'loading') {\n            this._loadCoreLib(afterDjatyJSLoadCb);\n          }\n        } else {\n          this._loadCoreLib(afterDjatyJSLoadCb);\n        }\n\n        if (this.isInitiated) {\n          return;\n        }\n\n        this.isInitiated = true;\n        this.timeline.unshift({\n          url: window.location.href,\n          ev: {\n            type: 'pushstate',\n            state: null,\n            title: document.title\n          },\n          time: Date.now(),\n          itemType: Djaty.constants.itemType.navigation\n        });\n\n        // Iterate over trackers\n        utils.forOwn(this.trackers, function (itemType, tracker) {\n          // Initiate every tracker object\n          if (!Djaty.config.trackingOptions[itemType]) {\n            return;\n          }\n\n          tracker.init(_this.onTrackingCb);\n        });\n      } catch (err) {\n        if (err instanceof Djaty.DjatyError) {\n          throw err;\n        }\n\n        Djaty.logger.error('Catch error in init initApp', err);\n      }\n    },\n\n\n    /**\n     * Destroy of the InitTrackingApp.\n     *\n     * @return void\n     */\n    destroy: function destroy() {\n      if (!this.isInitiated) {\n        return;\n      }\n\n      Djaty.logger.log('Destroy initApp');\n      utils.forOwn(Djaty.initApp.trackers, function (itemType, tracker) {\n        tracker.destroy();\n      });\n\n      this.nodeListeners.forEach(function (listen) {\n        Djaty.utils.originalRemoveEventListener.call(listen.node, listen.eventName, listen.cb);\n      });\n\n      this.timeline = [];\n      this.isInitiated = false;\n      this.onSubmitHandlers = [];\n      this.nodeListeners = [];\n      this.afterLoadDjatyCb = null;\n    },\n\n\n    /**\n     * Add in front of Array events to onSubmitHandlers\n     */\n    addInFrontOfSubmitHandler: function addInFrontOfSubmitHandler(event) {\n      utils.validate('addInFrontOfSubmitHandler', Djaty.constants.onBugSubmitStructure, event);\n      this.onSubmitHandlers.unshift(event);\n    },\n\n    /**\n    * Register new tracker.\n    *\n    * @param {String} itemType\n    * @param {Object} tracker\n    * @return void\n    */\n    addTracker: function addTracker(itemType, tracker) {\n      // Prevent any tracker from registering itself twice.\n      if (this.trackers[itemType]) {\n        return;\n      }\n\n      this.trackers[itemType] = tracker;\n    },\n\n\n    /**\n    * Register Core Tracking Callback.\n    *\n    * @param {Object} coreTrackingCb\n    * @return void\n    */\n    regCoreTrackingCb: function regCoreTrackingCb(coreTrackingCb) {\n      Djaty.initApp.onTrackingCoreCb = coreTrackingCb;\n    },\n\n    /**\n     * Extension configuration higher priority of js-frontend-agent config\n     *\n     * @param {Object} config\n     */\n    regExtConfig: function regExtConfig(config) {\n      Djaty.initApp.extConfig = config;\n    },\n    regAfterLoadDjaty: function regAfterLoadDjaty(cb) {\n      Djaty.initApp.afterLoadDjatyCb = cb;\n    },\n\n    /**\n    * A Callback called once tracking new items.\n    *\n    * @param {Object} item\n    * @return {Function | Number}\n    */\n    onTrackingCb: function onTrackingCb(item) {\n      if (Djaty.initApp.onTrackingCoreCb) {\n        return Djaty.initApp.onTrackingCoreCb(item);\n      }\n\n      if (item.itemType === Djaty.constants.itemType.form) {\n        return Djaty.initApp.initialFormData.push(item);\n      }\n\n      return Djaty.initApp.timeline.push(item);\n    },\n\n    /* ########################################################################## */\n    /* ######################## LOAD REST OF DJATY TOOL ######################### */\n    /* ########################################################################## */\n\n    // To reduce initialization time, lets load rest of code after a while\n    // we don't load it as a script tag to catch error message using (try..catch)\n    // not only type error in case (CORS)\n    _loadCoreLib: function _loadCoreLib(loadAfterCoreLoad) {\n      var xhttp = new XMLHttpRequest();\n      function onLoadError(err, msg) {\n        if (!Djaty.initApp.isInitiated) {\n          return;\n        }\n\n        Djaty.logger.info('Error in loading djaty core', err, msg);\n        var errMsg = msg || 'Refused to connect to Djaty. It is most likely a Content Security           Policy (CSP) or a connectivity problem. To solve this issue see <a target=\"_blank\" href=\"' + Djaty.config.apiUrl + '/docs/SDKs/frontendJs/troubleshooting.html#use-djaty-javascript-sdk-with-a-content-security-policy\">Troubleshooting</a>';\n\n        Djaty.logger.error('Can\\'t load (Djaty core)', errMsg, err);\n\n        if (!Djaty.initApp.isExtension) {\n          Djaty.initApp.destroy();\n\n          return;\n        }\n\n        Djaty.utils.externalMethodHandler.callMethod('djatyExt.onLoadFailure', function () {\n          Djaty.logger.info('Reset successfully.');\n          Djaty.utils.externalMethodHandler.callMethod('djatyExt.notify', errMsg, function () {\n            Djaty.logger.info('Extension notification had been sent.');\n            Djaty.initApp.destroy();\n          });\n        });\n      }\n\n      xhttp.onerror = onLoadError;\n\n      xhttp.onreadystatechange = function () {\n        if (xhttp.readyState !== 4) {\n          return;\n        }\n\n        if (xhttp.status !== 200) {\n          var errMsg = 'Unable to load Djaty as we are maintaining our servers now.' + ' Please try again after few minutes.';\n\n          onLoadError(xhttp.response, errMsg);\n\n          return;\n        }\n\n        // To prevent adding file twice (In case running extension and adding file manually\n        // at the same file).\n        var isLoaded = document.querySelector('script[djaty-app]');\n\n        if (loadAfterCoreLoad) {\n          loadAfterCoreLoad();\n        }\n\n        if (isLoaded) {\n          return;\n        }\n\n        var codeScript = document.createElement('script');\n        codeScript.type = 'text/javascript';\n        codeScript.innerHTML = xhttp.responseText;\n        codeScript.setAttribute('djaty-app', '');\n        codeScript.setAttribute('async', '');\n        codeScript.classList.add('djaty-app');\n        document.head.appendChild(codeScript);\n        if (!loadAfterCoreLoad) {\n          Djaty.trackingApp.init();\n        }\n      };\n      try {\n        xhttp.open('GET', Djaty.config.cdnPath + Djaty.constants.filesURL, true);\n        xhttp.send();\n      } catch (err) {\n        Djaty.logger.error('Catch CORS error during loading djaty core tracking file', err);\n        if (err.message.indexOf('Content Security Policy') !== -1) {\n          onLoadError(err.name + ': Refused to connect to Djaty. It is most likely a Content Security             Policy (CSP) or a connectivity problem. To solve this issue see             <a target=\"_blank\" href=\"' + Djaty.config.apiUrl + '/docs/SDKs/frontendJs/troubleshooting.html#use-djaty-javascript-sdk-with-a-content-security-policy\">Troubleshooting</a>');\n\n          return;\n        }\n\n        onLoadError(err.name + ': ' + err.message);\n      }\n    },\n\n    // Attach global nodeListeners for tracker listeners\n    _attachInitNodeListenersToOurEvents: function _attachInitNodeListenersToOurEvents(addEventListenerArgs) {\n      addEventListenerArgs.forEach(function (arg, idx) {\n        addEventListenerArgs[idx].nodeListeners = Djaty.initApp.nodeListeners;\n      });\n      utils.addEventListenerAndSaveIt(addEventListenerArgs);\n    },\n\n\n    /**\n     * Check for djaty api key attribute if found init with it\n     */\n    handleInitFromApiKeyAttr: function handleInitFromApiKeyAttr() {\n      var djatyApiKey = document.querySelector('script[djaty-api-key]');\n      if (djatyApiKey) {\n        Djaty.init({\n          apiKey: djatyApiKey.getAttribute('djaty-api-key')\n        });\n      }\n    },\n\n\n    /**\n     * Validate on config limits (timelineLimit, stacktraceLimit) and if exceed use our max limits.\n     *\n     * @param config\n     * @private\n     */\n    _handleConfigLimits: function _handleConfigLimits(config) {\n      var ourLimits = ['stacktraceLimit', 'timelineLimit'];\n\n      ourLimits.forEach(function (limit) {\n        var maxLimit = Djaty.constants[limit + 'Max'];\n\n        if (!config[limit] || config[limit] < maxLimit) {\n          return;\n        }\n\n        // eslint-disable-next-line no-console\n        console.warn('You can\\'t exceed limit for ' + limit + ' so we will use our max limit: ' + ('(' + maxLimit + ')'));\n\n        config[limit] = maxLimit;\n      });\n    },\n\n\n    /**\n     * Add cb to `onSubmitHandlers` callbacks to run before bug submission on submitted bug\n     *\n     * @param cb\n     * @private\n     */\n    _addBeforeBugSubmissionCb: function _addBeforeBugSubmissionCb(cb) {\n      utils.validate('beforeBugSubmissionCb', Djaty.constants.onBugSubmitStructure, cb);\n      Djaty.initApp.onSubmitHandlers.push(cb);\n    }\n  };\n  /* ########################################################################## */\n  /* ############################## Init/Destroy ############################## */\n  /* ########################################################################## */\n  Djaty.init = function (config) {\n    Djaty.initApp.init({ config: config });\n\n    if (Djaty.pcApp) {\n      Djaty.pcApp.init();\n    }\n\n    if (Djaty.trackingApp) {\n      Djaty.trackingApp.init({});\n    }\n  };\n\n  Djaty.trackBug = function (err) {\n    if (!Djaty.initApp.isInitiated) {\n      // eslint-disable-next-line no-console\n      console.warn('Djaty not initiated, Please initialize Djaty before use this method');\n\n      // eslint-disable-next-line no-console\n      console.error(err);\n\n      return;\n    }\n\n    if (!(err instanceof Error)) {\n      Djaty.initApp.originalMethods.trackConsole.error('Djaty.trackBug accept only Error objects');\n\n      return;\n    }\n\n    var time = Date.now();\n\n    var item = {\n      err: err,\n      msg: err.message,\n      time: time,\n      itemType: Djaty.constants.itemType.exception\n    };\n\n    Djaty.initApp.trackers.exception.onTrackingCb(item);\n  };\n\n  Djaty.destroy = function (destroyMessage) {\n    try {\n      if (Djaty.initApp.isInitiated) {\n        Djaty.initApp.destroy();\n      }\n\n      if (Djaty.trackingApp && Djaty.trackingApp.isInitiated) {\n        Djaty.trackingApp.destroy();\n      }\n\n      if (Djaty.pcApp) {\n        Djaty.pcApp.destroy(destroyMessage);\n      }\n    } catch (err) {\n      Djaty.logger.error('Catch djaty.destroy', err);\n    }\n  };\n\n  /**\n   * Set user to send it with patch\n   *\n   * @param user\n   */\n  Djaty.setUser = function (user) {\n    if (!Djaty.initApp.isInitiated) {\n      // eslint-disable-next-line no-console\n      console.warn('Djaty not initiated, Please initialize Djaty before use this method');\n\n      return;\n    }\n\n    Djaty.utils.validate('setUser', Djaty.constants.userStructure, user);\n    Djaty.config.user = user;\n  };\n\n  Djaty.addGlobalCustomData = function (data) {\n    Djaty.initApp.globalCustomData.push(data);\n  };\n\n  /* ########################################################################## */\n  /* ############################### NAVIGATION ############################### */\n  /* ########################################################################## */\n  var navigationTracker = {\n    onTrackingCb: null,\n    isInitiated: false,\n    /* **************************** Public Methods **************************** */\n    /**\n     * Initialization of the tracker.\n     *\n     * @return void\n     */\n    init: function init(onTrackingCb) {\n      if (this.isInitiated) {\n        return;\n      }\n      this.isInitiated = true;\n      this.onTrackingCb = onTrackingCb;\n      Djaty.initApp.originalMethods.trackPushStateNavigation = window.history.pushState;\n      Djaty.initApp.originalMethods.trackReplaceStateNavigation = window.history.replaceState;\n      window.history.pushState = this._wrapMethod(Djaty.initApp.originalMethods.trackPushStateNavigation, 'pushstate');\n\n      window.history.replaceState = this._wrapMethod(Djaty.initApp.originalMethods.trackReplaceStateNavigation, 'replacestate');\n\n      Djaty.initApp._attachInitNodeListenersToOurEvents([{ node: window, eventName: 'popstate', cb: this._handleNavigation }]);\n    },\n\n    /**\n     * Destory of the tracker.\n     *\n     * @return void\n     */\n    destroy: function destroy() {\n      if (!this.isInitiated) {\n        return;\n      }\n\n      this.isInitiated = false;\n      window.history.pushState = Djaty.initApp.originalMethods.trackPushStateNavigation;\n      window.history.replaceState = Djaty.initApp.originalMethods.trackReplaceStateNavigation;\n    },\n\n    /* **************************** Private Methods *************************** */\n    /**\n     *  Method for wrapping pushState/replace Method.\n     *\n     * @param {Function} originalFn\n     * @param {string} type\n     * @returns {Function}\n     * @private\n     */\n    _wrapMethod: function _wrapMethod(originalFn, type) {\n      return function wrapNav() {\n        try {\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var origReturn = originalFn.apply(this, args);\n          var data = {\n            type: type,\n            state: args[0]\n          };\n\n          navigationTracker._handleNavigation(data);\n          return origReturn;\n        } catch (err) {\n          return Djaty.logger.error('Catch navigator tracker \\'' + type + '\\' wrapper', err);\n        }\n      };\n    },\n\n\n    /**\n     * Navigation Handler.\n     *\n     * @param {Object} ev\n     * @private\n     */\n    _handleNavigation: function _handleNavigation(ev) {\n      var time = Date.now();\n      var item = {\n        itemType: Djaty.constants.itemType.navigation,\n        ev: ev,\n        url: window.location.href,\n        time: time\n      };\n\n      navigationTracker.onTrackingCb(item);\n    }\n  };\n\n  Djaty.initApp.addTracker(Djaty.constants.itemType.navigation, navigationTracker);\n  /* ########################################################################## */\n  /* ############################## AJAX CALLS ################################ */\n  /* ########################################################################## */\n  var ajaxTracker = {\n    onTrackingCb: null,\n    requestDetails: {},\n    isInitiated: false,\n    // Keep track of reqId (needed to backend tracking) for every AJAX req.\n    // reqMap: [],\n\n    /* **************************** Public Methods **************************** */\n    /**\n     * Initialization of the tracker.\n     *\n     * @return void\n     */\n    init: function init(onTrackingCb) {\n      if (this.isInitiated) {\n        return;\n      }\n\n      this.isInitiated = true;\n      this.onTrackingCb = onTrackingCb;\n      utils.assign(Djaty.initApp.originalMethods, {\n        trackOpenAjax: window.XMLHttpRequest.prototype.open,\n        trackSendAjax: window.XMLHttpRequest.prototype.send,\n        setHeadWrap: window.XMLHttpRequest.prototype.setRequestHeader,\n        abortWrapper: window.XMLHttpRequest.prototype.abort\n      });\n\n      utils.assign(window.XMLHttpRequest.prototype, {\n        open: this._wrapReqOpen(window.XMLHttpRequest.prototype.open),\n        setRequestHeader: this._wrapSetReqHeader(window.XMLHttpRequest.prototype.setRequestHeader),\n        send: this._wrapReqSend(window.XMLHttpRequest.prototype.send),\n        abort: this._wrapAbort(window.XMLHttpRequest.prototype.abort)\n      });\n    },\n\n    /**\n     * Destroy of the tracker.\n     *\n     * @return void\n     */\n    destroy: function destroy() {\n      if (!this.isInitiated) {\n        return;\n      }\n\n      utils.assign(window.XMLHttpRequest.prototype, {\n        open: window.XMLHttpRequest.prototype.open,\n        setRequestHeader: window.XMLHttpRequest.prototype.setRequestHeader,\n        send: window.XMLHttpRequest.prototype.send,\n        abort: window.XMLHttpRequest.prototype.abort\n      });\n\n      this.isInitiated = false;\n    },\n\n\n    /* **************************** Private Methods *************************** */\n    /**\n     * Wrap \"open\" method and listen to all requests being opened.\n     * @param  {Function} originalFn\n     * @return {Function}\n     */\n    _wrapReqOpen: function _wrapReqOpen(originalFn) {\n      if (typeof originalFn !== 'function') {\n        throw new Error('_wrapReqOpen only accepts \\'originalFn\\' as a function');\n      }\n\n      return function wrapOpen() {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        // here we listen to the same request the 'original' code made\n        // before it can listen to it, this guarantees that\n        // any response it receives will pass through our modifier\n        // function before reaching the 'original' code.\n        // Lets add an ID for every Ajax request and set a it as a special header to\n        // send to back end and help merging both back and front ends timelines.\n        var requestStart = new Date().getTime();\n        var host = window.location.host;\n        var rand = Math.random() * 10000000;\n        var requestId = '' + requestStart + rand + '_' + host + (Djaty.initApp.isExtension ? '_extension' : '');\n        // XMLHttpRequest.prototype.setRequestHeader = (...params) => {\n        //   headers.customRequestHeader.push({ name: params[0], value: params[1] });\n        //   Djaty.initApp.originalMethods.setHeadWrap.apply(this, ...params);\n        // };\n        // const reqMap = ajaxTracker.reqMap;\n        // reqMap.push({xhr: this, reqId});\n        args[1] += args[1].match(/\\?/) ? '&' : '?';\n        args[1] += 'djatyReqId=' + requestId;\n        this.__djaty = {\n          openParams: args,\n          reqStart: requestStart,\n          reqId: requestId,\n          requestHeaders: []\n        };\n\n        // here we return everything originalFn might return so nothing breaks\n        return originalFn.apply(this, args);\n      };\n    },\n\n    /**\n     * Wrap \"setRequestHeader\" method and listen to added headers to requests.\n     * @param  {Function} originalFn\n     * @return {Function}\n     */\n    _wrapSetReqHeader: function _wrapSetReqHeader(originalFn) {\n      if (typeof originalFn !== 'function') {\n        throw new Error('_wrapReqOpen only accepts \\'originalFn\\' as a function');\n      }\n\n      return function wrapSetReqHeader() {\n        for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        var originalReturn = originalFn.apply(this, args);\n\n        // Don't track our requests.\n        if (Djaty.initApp.trackers.ajax._isDjatyAjax(this.__djaty.openParams[1], this.__djaty.requestHeaders)) {\n          return originalReturn;\n        }\n\n        try {\n          // I try to avoid adding the same header twice.\n          var isHeaderAlreadyExists = this.__djaty.requestHeaders.find(function (item) {\n            return item.name === args[0];\n          });\n          if (!isHeaderAlreadyExists) {\n            // I stringify the value of header to avoid has different types for it (number, string)\n            // Our validation and dashboard expect it as string.\n            this.__djaty.requestHeaders.push({ name: args[0], value: JSON.stringify(args[1]) });\n          } else {\n            isHeaderAlreadyExists.value = JSON.stringify(args[1]);\n          }\n        } catch (err) {\n          Djaty.logger.error('Catch wrapping setRequestHeader method with error ', err);\n        }\n\n        return originalReturn;\n      };\n    },\n\n    /**\n     * Wrap \"send\" method and listen to all requests being sent.\n     * @param  {Function} originalFn\n     * @return {Function}\n     */\n    _wrapReqSend: function _wrapReqSend(originalFn) {\n      if (typeof originalFn !== 'function') {\n        throw new Error('_wrapReqOpen only accepts \\'originalFn\\' as a function');\n      }\n\n      var ajaxCookie = document.cookie;\n\n      return function djatyXHRSendWrapper() {\n        var _this2 = this;\n\n        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        try {\n          // Don't track our requests.\n          if (Djaty.initApp.trackers.ajax._isDjatyAjax(this.__djaty.openParams[1], this.__djaty.requestHeaders)) {\n            return originalFn.apply(this, args);\n          }\n\n          ajaxTracker.requestDetails = {\n            reqArgs: this.__djaty.openParams,\n            isAborted: this.__djaty.isAborted,\n            requestPayload: args[0],\n            reqId: this.__djaty.reqId,\n            ajaxCookie: ajaxCookie,\n            state: 'pending',\n            headers: {\n              requestHeaders: this.__djaty.requestHeaders\n            }\n          };\n\n          ajaxTracker._ajaxHandler.call(this, ajaxTracker.requestDetails);\n\n          Djaty.initApp._attachInitNodeListenersToOurEvents([{\n            node: this,\n            eventName: 'readystatechange',\n            cb: function cb(ev) {\n              // Check if request finished and response is ready.\n              if (_this2.readyState !== 4) {\n                return;\n              }\n\n              var resHeaders = _this2.getAllResponseHeaders();\n              var reqEnd = Date.now();\n              var requestTime = reqEnd - _this2.__djaty.reqStart;\n              ajaxTracker.requestDetails = { ev: ev,\n                reqArgs: _this2.__djaty.openParams,\n                isAborted: _this2.__djaty.isAborted,\n                reqId: _this2.__djaty.reqId,\n                requestTime: requestTime,\n                state: 'finished',\n                headers: {\n                  responseHeaders: resHeaders,\n                  requestHeaders: _this2.__djaty.requestHeaders\n                }\n              };\n\n              ajaxTracker._ajaxHandler.call(_this2, ajaxTracker.requestDetails);\n            } }]);\n        } catch (err) {\n          Djaty.logger.error('Catch Ajax tracker error message ', err);\n        }\n\n        // here we return everything originalFn might return so nothing breaks\n        return originalFn.apply(this, args);\n      };\n    },\n\n\n    /**\n     * Wrap \"abort\" method and listen to aborted requests.\n     * @param  {Function} originalFn\n     * @return {Function}\n     */\n    _wrapAbort: function _wrapAbort(originalFn) {\n      if (typeof originalFn !== 'function') {\n        throw new Error('_wrapAbort only accepts \\'originalFn\\' as a function');\n      }\n\n      return function wrapAbort() {\n        this.__djaty.isAborted = true;\n\n        for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          args[_key5] = arguments[_key5];\n        }\n\n        return originalFn.apply(this, args);\n      };\n    },\n\n    /**\n    * Event Handler\n    * @param  {Event} ev\n    * @param  {Array} reqArgs\n    * @param  {Boolean} isAborted\n    * @param  {Array} requestPayload\n    * @param  {String} reqId\n    * @param  {String} state\n    * @param  {Number} requestTime\n    * @param  {String} ajaxCookie\n    * @param  {Object} headers\n    * @return {void}\n    */\n    _ajaxHandler: function _ajaxHandler(_ref2) {\n      var ev = _ref2.ev,\n          reqArgs = _ref2.reqArgs,\n          isAborted = _ref2.isAborted,\n          requestPayload = _ref2.requestPayload,\n          reqId = _ref2.reqId,\n          state = _ref2.state,\n          requestTime = _ref2.requestTime,\n          ajaxCookie = _ref2.ajaxCookie,\n          headers = _ref2.headers;\n\n      if (!(ev instanceof Event && ev.type === 'readystatechange') && state !== 'pending') {\n        throw new Error('_ajaxHandler only accept events of type \\'readystatechange\\'');\n      }\n\n      if (!Array.isArray(reqArgs)) {\n        throw new Error('Make sure you pass \"reqArgs\" parameter as an array');\n      }\n\n      var time = Date.now();\n\n      var item = {\n        ev: ev,\n        reqArgs: reqArgs,\n        requestPayload: requestPayload,\n        isAborted: isAborted,\n        time: time,\n        requestTime: requestTime,\n        itemType: Djaty.constants.itemType.ajax,\n        reqId: reqId,\n        ajaxCookie: ajaxCookie,\n        headers: headers,\n        state: state\n      };\n\n      ajaxTracker.onTrackingCb(item);\n    },\n\n\n    /**\n     * Is Djaty ajax request.\n     *\n     * @param url\n     * @param requestHeaders\n     * @returns {*}\n     * @private\n     */\n    _isDjatyAjax: function _isDjatyAjax(url, requestHeaders) {\n      // Don't track our requests.\n      var escapedApiURL = ('' + Djaty.config.bugsURL + Djaty.config.api + Djaty.config.apiBugsUrl).replace(/\\//g, '\\\\/').replace(/\\./g, '\\\\.');\n\n      var escapedCDNURL = Djaty.config.cdnPath.replace(/\\//g, '\\\\/').replace(/\\./g, '\\\\.');\n\n      var ignoredURLRegex = new RegExp('^(' + escapedApiURL + '|' + escapedCDNURL + ').*', 'gi');\n\n      return url.match(ignoredURLRegex) || requestHeaders['current-domain'];\n    }\n  };\n\n  Djaty.initApp.addTracker(Djaty.constants.itemType.ajax, ajaxTracker);\n  /* ########################################################################## */\n  /* ############################### CONSOLE ################################## */\n  /* ########################################################################## */\n  var consoleTracker = {\n    onTrackingCb: null,\n    isInitiated: false,\n\n    /* **************************** Public Methods **************************** */\n    /**\n    * Initialization of the tracker.\n    *\n    * @return void\n    */\n    init: function init(onTrackingCb) {\n      var _this3 = this;\n\n      if (this.isInitiated) {\n        return;\n      }\n\n      this.isInitiated = true;\n      this.onTrackingCb = onTrackingCb;\n      Djaty.initApp.originalMethods.trackConsole = utils.assign({}, window.console);\n      var console = window.console;\n      // On pc 'log' is an own property inside console obj but on hybrid mobile\n      // it is an inherited property. So, we iterate over console obj with\n      // normal for..in to get the prototype chained properties also.\n\n      // // eslint-disable-next-line\n      // for (const attrName in console) {\n      //   const impl = console[attrName];\n      //   if (typeof impl !== 'function') {\n      //     continue;\n      //   }\n      //\n      //   console[attrName] = this._wrapMethod(attrName, impl);\n      // }\n      utils.forOwn(console, function (attrName, method) {\n        if (typeof method !== 'function' || Djaty.config.trackingOptions.console.excludedMethods && Djaty.config.trackingOptions.console.excludedMethods.find(function (item) {\n          return item === attrName;\n        }) !== undefined) {\n          return;\n        }\n\n        console[attrName] = _this3._wrapMethod(attrName, method);\n      });\n      // Window here is identical to the page's window, since this script is injected\n      window.console = console;\n    },\n\n\n    /**\n     * Destroy console Tracker\n     */\n    destroy: function destroy() {\n      if (!this.isInitiated) {\n        return;\n      }\n\n      this.isInitiated = false;\n      window.console = Djaty.initApp.originalMethods.trackConsole || window.console;\n      // Djaty.initApp.originalMethods.trackConsole = null;\n    },\n\n\n    /* **************************** Private Methods *************************** */\n    /**\n     * Wrap \"console\" methods.\n     *\n     * @param  {String} attrName\n     * @param  {Function} originalFn\n     * @return {Function}\n     */\n    _wrapMethod: function _wrapMethod(attrName, originalFn) {\n      if (typeof attrName !== 'string') {\n        throw new Error('Make sure you pass \"attrName\" parameter as a string');\n      }\n\n      if (typeof originalFn !== 'function') {\n        throw new Error('_wrapMethod only accepts \\'originalFn\\' as a function');\n      }\n\n      return function wrappedConsole() {\n        // Add try/catch her to handle exception when user call console methods because console\n        // tracker not wrapped with our try/catch.\n        try {\n          for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n            args[_key6] = arguments[_key6];\n          }\n\n          var originalReturn = originalFn.apply(this, args);\n\n          consoleTracker._consoleHandler(attrName, args);\n          return originalReturn;\n        } catch (err) {\n          return Djaty.logger.error('Catch console error', err);\n        }\n      };\n    },\n\n\n    /**\n     * Log wrapping Handler\n     * @param  {String} attrName\n     * @param  {Array} args\n     * @param  {Number} time\n     * @return {void}\n     */\n    _consoleHandler: function _consoleHandler(attrName, args) {\n      var time = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Date.now();\n\n      if (typeof attrName !== 'string') {\n        throw new Error('Make sure you pass \"attrName\" parameter as a string');\n      }\n\n      if (!Array.isArray(args)) {\n        throw new Error('Make sure you pass \"args\" parameter as an array');\n      }\n\n      // Allow debugging our code without being tracked.\n      if (args[0] === 'Djaty') {\n        return args.splice(0, 1);\n      }\n\n      var item = {\n        attrName: attrName,\n        args: args,\n        time: time,\n        itemType: Djaty.constants.itemType.console\n      };\n\n      return this.onTrackingCb(item);\n    }\n  };\n\n  Djaty.initApp.addTracker(Djaty.constants.itemType.console, consoleTracker);\n\n  /* ########################################################################## */\n  /* ################################ ERRORS ################################## */\n  /* ########################################################################## */\n  var exceptionTracker = {\n    onTrackingCb: null,\n    isInitiated: false,\n    /* **************************** Public Methods **************************** */\n    /**\n     * Initialization of the tracker.\n     *\n     * @return void\n     */\n    init: function init(onTrackingCb) {\n      if (this.isInitiated) {\n        return;\n      }\n\n      this.isInitiated = true;\n      this.onTrackingCb = onTrackingCb;\n\n      Djaty.initApp._attachInitNodeListenersToOurEvents([{\n        node: window,\n        eventName: 'error',\n        cb: exceptionTracker._errHandler\n      }]);\n    },\n\n    /**\n     * Destroy of the tracker.\n     *\n     * @return void\n     */\n    destroy: function destroy() {\n      if (!this.isInitiated) {\n        return;\n      }\n\n      this.isInitiated = false;\n    },\n\n    /* **************************** Private Methods *************************** */\n    /**\n    * Error event Handler\n    *\n    * @param  {Event} ev\n    * @return {void}\n    */\n    _errHandler: function _errHandler(ev) {\n      if (!(ev instanceof Event && ev.type === 'error')) {\n        throw new Error('_errHandler only accept events of type \\'error\\'');\n      }\n\n      var time = Date.now();\n\n      var item = {\n        err: ev.error,\n        msg: ev.message,\n        time: time,\n        itemType: Djaty.constants.itemType.exception\n      };\n\n      exceptionTracker.onTrackingCb(item);\n    }\n  };\n\n  Djaty.initApp.addTracker(Djaty.constants.itemType.exception, exceptionTracker);\n\n  /* ########################################################################## */\n  /* ################################# FILES ################################## */\n  /* ########################################################################## */\n  var fileTracker = {\n    onTrackingCb: null,\n\n    /* **************************** Public Methods **************************** */\n    /**\n    * Initialization of the tracker.\n    *\n    * @return void\n    */\n    init: function init(onTrackingCb) {\n      this.onTrackingCb = onTrackingCb;\n\n      // Commented types below to indicate that we tried to handle but couldn't find\n      // a way to handle them.\n      var fileTypes = {\n        // frame: {target: 'src'},\n        // iframe: {target: 'src'},\n        img: { target: 'src' },\n        input: { target: 'src' },\n        link: { target: 'href' },\n        // object: {target: 'data'},\n        script: { target: 'src' },\n        audio: { target: 'src' },\n        video: { target: 'src' },\n        // embed: {target: 'src'},\n        source: { target: 'src' },\n        track: { target: 'src' }\n      };\n\n      var fileTypesNames = Object.keys(fileTypes);\n      var observerConfig = {\n        // Listening to Dom additions.\n        childList: true,\n\n        // Recursive listening.\n        subtree: true\n      };\n\n      function addNodeListener(nodeEl, type) {\n        function eventCb() {\n          Djaty.initApp.trackers.file._fileHandler(nodeEl, type.target, 'error');\n        }\n\n        Djaty.initApp._attachInitNodeListenersToOurEvents([{\n          node: nodeEl,\n          eventName: 'error',\n          cb: eventCb\n        }]);\n      }\n\n      function nodeElCheck(parentNodeEl) {\n        if (!utils.isDomElement(parentNodeEl)) {\n          return;\n        }\n\n        var nestedChildrenEls = utils.nodeListToArr(parentNodeEl.querySelectorAll(fileTypesNames.join(', ')));\n        nestedChildrenEls.push(parentNodeEl);\n        nestedChildrenEls.forEach(function (nodeEl) {\n          var tagName = nodeEl.nodeName.toLowerCase();\n          var type = fileTypes[tagName];\n\n          // if not an intent node type or has djaty-app\n          // attr(to exclude current script from the process)\n          // and if doesn't have a scr/href\n          if (!(type && nodeEl[type.target] && !nodeEl.hasAttribute('djaty-app') && !nodeEl.hasAttribute('__djaty_file_already_tracked'))) {\n            return;\n          }\n\n          addNodeListener(nodeEl, type);\n        });\n      }\n\n      var allDOMElement = document.querySelectorAll(fileTypesNames.join(', '));\n      utils.nodeListToArr(allDOMElement).forEach(function (nodeEl) {\n        addNodeListener(nodeEl);\n      });\n\n      // Listening to every DOM element when added.\n      Djaty.initApp.originalMethods.trackFiles = new MutationObserver(function (mutations) {\n        try {\n          mutations.forEach(function (mutation) {\n            utils.nodeListToArr(mutation.addedNodes).forEach(function (nodeEl) {\n              nodeElCheck(nodeEl);\n            });\n          });\n        } catch (err) {\n          Djaty.logger.error('Catch in mutations observer', err);\n        }\n      });\n\n      Djaty.initApp.originalMethods.trackFiles.observe(document, observerConfig);\n    },\n\n    /**\n     * Destory file tracker\n     */\n    destroy: function destroy() {\n      if (Djaty.initApp.originalMethods.trackFiles) {\n        Djaty.initApp.originalMethods.trackFiles.disconnect();\n      }\n    },\n\n    /* **************************** Private Methods *************************** */\n    /**\n     * Error event Handler\n     *\n     * @param  {Object} node\n     * @param  {Object} target\n     * @param  {String} ev\n     * @return {void}\n     */\n    _fileHandler: function _fileHandler(node, target, ev) {\n      if (typeof target !== 'string' || typeof ev !== 'string') {\n        throw new Error('Make sure you pass \"_fileHandler\" parameters correctly');\n      }\n\n      if (!utils.isDomElement(node)) {\n        throw new Error('Make sure you pass \"node\" parameter as DOM element');\n      }\n\n      if (node.hasAttribute('__djaty_file_already_tracked')) {\n        return;\n      }\n\n      node.setAttribute('__djaty_file_already_tracked', '');\n\n      var time = Date.now();\n\n      var item = {\n        node: node,\n        target: target,\n        ev: ev,\n        time: time,\n        itemType: Djaty.constants.itemType.file\n      };\n\n      this.onTrackingCb(item);\n    }\n  };\n\n  Djaty.initApp.addTracker(Djaty.constants.itemType.file, fileTracker);\n\n  /* ########################################################################## */\n  /* ################################ FORMS ################################### */\n  /* ########################################################################## */\n  var formTracker = {\n    onTrackingCb: null,\n    isInitiated: false,\n\n    /* **************************** Public Methods **************************** */\n    /**\n    * Initialization of the tracker.\n    *\n    * @return void\n    */\n    init: function init(onTrackingCb) {\n      if (this.isInitiated) {\n        return;\n      }\n      this.isInitiated = true;\n      this.onTrackingCb = onTrackingCb;\n      var formObserverConfig = {\n        // Listening to Dom additions.\n        childList: true,\n\n        // Recursive listening.\n        subtree: true\n      };\n      function formElCheck(node) {\n        var form = node;\n        var tagName = node.nodeName.toLowerCase();\n        var untracked = node.className && node.className.match && node.className.match('djaty-no-track');\n        if (untracked) {\n          return;\n        }\n\n        if (tagName !== 'form') {\n          node.childNodes.forEach(function (child) {\n            formElCheck(child);\n          });\n\n          return;\n        }\n\n        Djaty.initApp._attachInitNodeListenersToOurEvents([{\n          node: form,\n          eventName: 'submit',\n          cb: formTracker._onFormSubmit\n        }]);\n      }\n      var allFormEls = document.querySelectorAll('form');\n      utils.nodeListToArr(allFormEls).forEach(function (node) {\n        formElCheck(node);\n      });\n\n      Djaty.initApp.originalMethods.trackForm = new MutationObserver(function (mutations) {\n        try {\n          mutations.forEach(function (mutation) {\n            utils.nodeListToArr(mutation.addedNodes).forEach(function (node) {\n              formElCheck(node);\n            });\n          });\n        } catch (err) {\n          Djaty.logger.error('Catch in mutations observer', err);\n        }\n      });\n\n      Djaty.initApp.originalMethods.trackForm.observe(document, formObserverConfig);\n    },\n\n    /**\n     * Destory Form tracker\n     */\n    destroy: function destroy() {\n      if (!this.isInitiated) {\n        return;\n      }\n      this.isInitiated = false;\n      if (Djaty.initApp.originalMethods.trackForm) {\n        Djaty.initApp.originalMethods.trackForm.disconnect();\n      }\n    },\n\n    /* **************************** Private Methods *************************** */\n    /**\n    * On form submit event handler.\n    *\n    * @param {Event} ev\n    * @return void\n    */\n    _onFormSubmit: function _onFormSubmit(ev) {\n      if (!(ev instanceof Event && ev.type === 'submit')) {\n        throw new Error('_onFormSubmit only accept events of type \\'submit\\'');\n      }\n\n      var time = Date.now();\n\n      var item = {\n        ev: ev,\n        time: time,\n        itemType: Djaty.constants.itemType.form\n      };\n\n      formTracker.onTrackingCb(item);\n    }\n  };\n\n  Djaty.initApp.addTracker(Djaty.constants.itemType.form, formTracker);\n\n  /**\n   * Adding events to onSubmitHandlers\n   */\n  Djaty.addSubmitHandler = function (cb) {\n    if (!Djaty.initApp.isInitiated) {\n      // eslint-disable-next-line no-console\n      console.warn('Djaty not initiated, Please initialize Djaty before use this method');\n\n      return;\n    }\n\n    Djaty.initApp._addBeforeBugSubmissionCb(cb);\n  };\n\n  Djaty.version = '1.0.0';\n\n  Djaty.initApp.handleInitFromApiKeyAttr();\n})();\n//# sourceMappingURL=jsAgentInitLib.js.map\n"]}